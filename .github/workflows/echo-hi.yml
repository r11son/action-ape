# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install pre-reqs
      run: sudo apt install -y build-essential autoconf bison flex texinfo help2man gawk libtool libncurses5-dev python3-dev python3-distutils git libtool-bin

    - name: Build ct-ng
      run: |
        mkdir -p build
        pwd
        git clone --depth 1 https://github.com/crosstool-ng/crosstool-ng.git
        cd crosstool-ng
        ./bootstrap
        ./configure --prefix=/opt/crosstool-ng
        make
        sudo make install

    - name: Build x-tools
      run: |
        mkdir -p $HOME/ct-build
        cd $HOME/ct-build
        cp $GITHUB_WORKSPACE/crosstool-ng.config ./.config
        /opt/crosstool-ng/bin/ct-ng build

    - name: Tar x-tools
      run: |
        cd /opt
        tar -cvzf ${{ github.workspace }}/x-tools.tgz x-tools

    - name: Archive x-tools
      uses: actions/upload-artifact@v2-preview
      with:
        name: x-tools
        path: ${{ github.workspace }}/test.tar
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ github.workspace }}/x-tools.tgz
        asset_name: x-tools.tgz
        asset_content_type: application/gzip